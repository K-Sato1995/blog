{
  "data": [
    {
      "body": "<h2>Snarkdown</h2>\n<p><img src=\"http://emojipop.net/data/images/emoji_set_77.png\" alt=\"snarkdown\"></p>\n<p><em><a href=\"http://github.com/developit/snarkdown\">Snarkdown</a></em> is <strong>easy</strong> to <code>use</code>!</p>\n<p>Here's an <a href=\"#example\"><strong>important</strong> anchor link</a>.</p>\n<p>Two newlines creates a line break.</p>\n<p>Or, end a line with two spaces.<br>\nJust like that!</p>\n<h3>Code &amp; Poetry</h3>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">codeBlocks</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Can be inserted&#x27;</span>;\n}\n</code></pre>\n<p>tests</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">codeBlocks</span>(<span class=\"hljs-params\"></span>):<span class=\"hljs-built_in\">string</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Can be inserted&#x27;</span>;\n}\n</code></pre>\n<h3>Block Quotes</h3>\n<blockquote>\n<p>You can insert quotes by</p>\n</blockquote>\n<h2>Lists</h2>\n<ul>\n<li>item1s</li>\n<li>item2</li>\n</ul>\n",
      "title": "Test Title",
      "date": "2022-03-05T00:00:00.000Z",
      "description": "Neded for SEO",
      "isCompleted": true,
      "slug": "test-slug",
      "tags": [
        "test-tag"
      ]
    },
    {
      "body": "<h1>Table of contents</h1>\n<ol>\n<li><a href=\"#what-is-a-getter-method\">What is a getter method</a></li>\n</ol>\n<ul>\n<li><a href=\"#what-is-a-setter-method\">What is a setter method</a></li>\n<li><a href=\"#what-are-accessors?\">What are accessors?</a></li>\n<li><a href=\"#references\">References</a></li>\n</ul>\n<h1>What is a getter method?</h1>\n<h2>Getter OverView</h2>\n<p><strong>A getter method</strong> is a method that <em>gets</em> a value of an instance variable.<br>\nWithout a getter method, you can not retrieve a value of an instance variable outside the class the instance variable is instantiated from.</p>\n<h3>Protip(1)</h3>\n<p><strong>A getter method</strong> is a method that <em>gets</em> a value of an instance variable.<br>\nWithout a getter method, you can not retrieve a value of an instance<br>\nvariable outside the class the instance variable is instantiated from.</p>\n<h3>Protip(2)</h3>\n<p><strong>A getter method</strong> is a method that <em>gets</em> a value of an instance variable.<br>\nWithout a getter method, you can not retrieve a value of an instance variable outside the class the instance variable is instantiated from.</p>\n<h2>Getter Example</h2>\n<p>Here is an example.</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>)\np obj1.name <span class=\"hljs-comment\">#=&gt; undefined method `name&#x27; for #&lt;Movie:0x007fecd08cb288 <span class=\"hljs-doctag\">@name</span>=&quot;Forrest Gump&quot;&gt; (NoMethodError)</span>\n</code></pre>\n<p>As you can see,  the value of  <code>obj1</code> (<code>name</code>) can not be retrieved outside <code>Movie</code> class. if you try to retrive a value of an instance variable outside its class without a getter method, Ruby raises <a href=\"http://ruby-doc.org/core-2.5.0/NoMethodError.html\">No Mothod Error</a>.</p>\n<p>Now, Let's see how to retrieve the value of <code>obj1</code> outside <code>Movie</code> class with a getter method.<br>\nAll you have to do here is to define a <code>getter method</code> named <code>name</code>. Though the name of a getter method can be anything, it is common practice to name a getter method the instance variableâ€™s name.</p>\n<pre><code class=\"hljs language-ruby\"> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n  <span class=\"hljs-keyword\">end</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">name</span></span>\n    <span class=\"hljs-variable\">@name</span>\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>)\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Forrest Gump&quot;</span>\n</code></pre>\n<h1>What is a setter method?</h1>\n<h2>Setter overview</h2>\n<p><strong>A setter</strong> is a method that <em>sets</em> a value of an instance variable.<br>\nWithout a setter method, you can not assign a value to an instance variable outside its class.<br>\nif you try to set a value of an instance variable outside its class, Ruby raises  <a href=\"http://ruby-doc.org/core-2.5.0/NoMethodError.html\">No Method Error</a> just like it does when you try to retrieve a value of an instance variable outside its class without a getter method.</p>\n<h2>Setter example</h2>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n  <span class=\"hljs-keyword\">end</span>\n\n  def name <span class=\"hljs-comment\">#getter method</span>\n    <span class=\"hljs-variable\">@name</span>\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>)\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Forrest Gump&quot;</span>\nobj1.name = <span class=\"hljs-string\">&#x27;Fight Club&#x27;</span> <span class=\"hljs-comment\">#=&gt; undefined method `name=&#x27; for #&lt;Movie:0x007f9937053368 <span class=\"hljs-doctag\">@name</span>=&quot;Forrest Gump&quot;&gt; (NoMethodError)</span>\n</code></pre>\n<p>Defining a setter method inside a class makes it possible to set a value of an instance variable outside the class.<br>\nYou can define a setter method like the code below.</p>\n<pre><code class=\"hljs language-ruby\"> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n  <span class=\"hljs-keyword\">end</span>\n\n  def name <span class=\"hljs-comment\">#getter method</span>\n    <span class=\"hljs-variable\">@name</span>\n  <span class=\"hljs-keyword\">end</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">name=</span><span class=\"hljs-params\">(name)</span></span> <span class=\"hljs-comment\">#setter method</span>\n    <span class=\"hljs-variable\">@name</span> = name\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\n\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>)\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Forrest Gump&quot;</span>\nobj1.name = <span class=\"hljs-string\">&#x27;Fight Club&#x27;</span>\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Fight Club&quot;</span>\n</code></pre>\n<p>By using <code>name=</code>, you can now assign a new value <code>Fight Club</code> to <code>obj1</code>.</p>\n<h1>What are accessors?</h1>\n<p><code>Accessors</code> are a way to create getter and setter methods without explicitly defining them in a class.<br>\nThere are three types fo accessors in Ruby.</p>\n<ul>\n<li><code>attr_reader</code> automatically generates a getter method for each given attribute.</li>\n<li><code>attr_writer</code> automatically generates a setter method for each given attribute.</li>\n<li><code>attr_accessor</code> automatically generates a getter and setter method for each given attribute.</li>\n</ul>\n<p>First, let's take a look at <code>attr_reader</code>!<br>\nAs you can see in the code below, <code>name</code> and <code>year</code> are retrieved outside <code>Movie</code> class even though there is no getter method for either of them. This is because <code>attr_reader</code> generates a getter method for each given attribute.</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n <span class=\"hljs-keyword\">attr_reader</span> <span class=\"hljs-symbol\">:name</span>, <span class=\"hljs-symbol\">:year</span>\n\n <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name, year)</span></span>\n   <span class=\"hljs-variable\">@name</span> = name\n   <span class=\"hljs-variable\">@year</span> = year\n <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>, <span class=\"hljs-number\">1994</span>)\np obj1.name <span class=\"hljs-comment\">#=&gt; Forrest Gump</span>\np obj1.year <span class=\"hljs-comment\">#=&gt; 1994</span>\n</code></pre>\n<p>Second, let's see how <code>attr_writer</code> works!<br>\nAs I mentioned above, <code>attr_witer</code> generates a setter method for each given attribute. Therefore you can assign new values to <code>ob1</code> without explicitly writing setter methods for <code>name</code> and <code>year</code>!</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-keyword\">attr_reader</span> <span class=\"hljs-symbol\">:name</span>, <span class=\"hljs-symbol\">:year</span> \n  <span class=\"hljs-keyword\">attr_writer</span> <span class=\"hljs-symbol\">:name</span>, <span class=\"hljs-symbol\">:year</span>\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name, year)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n    <span class=\"hljs-variable\">@year</span> = year\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>, <span class=\"hljs-number\">1994</span>)\nobj1.name = <span class=\"hljs-string\">&#x27;Fight Club&#x27;</span>\nobj1.year = <span class=\"hljs-number\">1999</span>\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Fight Club&quot;</span>\np obj1.year <span class=\"hljs-comment\">#=&gt; 1999</span>\n</code></pre>\n<p>Last but certainly not least, <code>attr_accessor</code> does what <code>attr_reader</code> and <code>attr_writer</code> do with just one line of code! It will automatically generate a getter and setter mehod for each given attribute.</p>\n<pre><code class=\"hljs language-ruby\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Movie</span></span>\n  <span class=\"hljs-keyword\">attr_accessor</span> <span class=\"hljs-symbol\">:name</span>, <span class=\"hljs-symbol\">:year</span>\n  \n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(name, year)</span></span>\n    <span class=\"hljs-variable\">@name</span> = name\n    <span class=\"hljs-variable\">@year</span> = year\n  <span class=\"hljs-keyword\">end</span>\n<span class=\"hljs-keyword\">end</span>\nobj1 = Movie.new(<span class=\"hljs-string\">&#x27;Forrest Gump&#x27;</span>, <span class=\"hljs-number\">1994</span>)\nobj1.name = <span class=\"hljs-string\">&#x27;Fight Club&#x27;</span>\nobj1.year = <span class=\"hljs-number\">1999</span>\np obj1.name <span class=\"hljs-comment\">#=&gt; &quot;Fight Club&quot;</span>\np obj1.year <span class=\"hljs-comment\">#=&gt; 1999</span>\n</code></pre>\n<h1>References</h1>\n<ul>\n<li><a href=\"https://k-blog0130.herokuapp.com/posts/2\">Ruby Getters and Setters</a></li>\n<li><a href=\"https://medium.com/@rondwalker22/how-getter-setter-methods-work-in-ruby-c5f5da07f99\">How getter/setter methods work in Ruby</a></li>\n<li><a href=\"https://stackoverflow.com/questions/4370960/what-is-attr-accessor-in-ruby\">What is attr_accessor in Ruby?</a></li>\n<li><a href=\"http://rubylearning.com/satishtalim/ruby_syntactic_sugar.html\">rubylearning.com</a></li>\n</ul>\n",
      "title": "Ruby Getters and Setters",
      "date": "2022-03-05T00:00:00.000Z",
      "description": "Neded for SEO",
      "isCompleted": true,
      "slug": "ruby-getters-and-setters",
      "tags": [
        "test-tag"
      ]
    },
    {
      "body": "<h2>Snarkdown</h2>\n<p><img src=\"http://emojipop.net/data/images/emoji_set_77.png\" alt=\"snarkdown\"></p>\n<p><em><a href=\"http://github.com/developit/snarkdown\">Snarkdown</a></em> is <strong>easy</strong> to <code>use</code>!</p>\n<p>Here's an <a href=\"#example\"><strong>important</strong> anchor link</a>.</p>\n<p>Two newlines creates a line break.</p>\n<p>Or, end a line with two spaces.<br>\nJust like that!</p>\n<h2>Code &amp; Poetry</h2>\n<pre><code>You can also indent\nblocks to display\ncode or poetry.\n\nIndented code/poetry blocks  \ncan be hard-wrapped.\n</code></pre>\n<p><strong>Or, wrap your code in three backticks:</strong></p>\n<pre><code class=\"hljs language-JavaScript\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">codeBlocks</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Can be inserted&#x27;</span>;\n}\n</code></pre>\n<h3>Block Quotes</h3>\n<blockquote>\n<p>You can insert quotes by<br>\npreceeding each line with <code>&gt;</code>.</p>\n<p>Blockquotes can also contain line<br>\nbreaks.</p>\n</blockquote>\n<h2>Lists</h2>\n<ul>\n<li>Unordered</li>\n</ul>\n<ul>\n<li>Lists</li>\n</ul>\n<ul>\n<li>Of mixed type</li>\n</ul>\n<ol>\n<li>Ordered</li>\n<li>Lists</li>\n<li>Numbers are ignored</li>\n</ol>\n",
      "title": "Blog post",
      "date": "2022-03-06T00:00:00.000Z",
      "description": "Needed for SEO",
      "isCompleted": true,
      "slug": "blog-post",
      "tags": [
        "test-tag"
      ]
    }
  ]
}